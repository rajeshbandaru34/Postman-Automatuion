{
	"info": {
		"_postman_id": "4bf6ef5b-37c1-4790-a463-1c205d74bbc5",
		"name": "MockServer_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28909121",
		"_collection_link": "https://puls77.postman.co/workspace/Postman_Automation~afa490e0-15ec-43d3-bb40-b5cd6799cd1d/collection/28909121-4bf6ef5b-37c1-4790-a463-1c205d74bbc5?action=share&source=collection_link&creator=28909121"
	},
	"item": [
		{
			"name": "api/unknown",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//get name when year is 2000\r",
							"const jsonData =  pm.response.json();\r",
							"\r",
							"pm.test(\"get name when year is 2000\", function(){\r",
							"jsonData.data.forEach(function(item){\r",
							"if(item.year === 2000){\r",
							"\r",
							"    console.log(item.name);\r",
							"pm.environment.set(\"name\", item.name);\r",
							"\r",
							"}\r",
							"\r",
							"\r",
							"});\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/unknown?id=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"unknown"
					],
					"query": [
						{
							"key": "id",
							"value": "0"
						}
					]
				}
			},
			"response": [
				{
					"name": "api/unknown",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/unknown?id=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"unknown"
							],
							"query": [
								{
									"key": "id",
									"value": "0"
								}
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"per_page\": 6,\n    \"total\": 12,\n    \"total_pages\": 2,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"cerulean\",\n            \"year\": 2000,\n            \"color\": \"#98B2D1\",\n            \"pantone_value\": \"15-4020\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"fuchsia rose\",\n            \"year\": 2001,\n            \"color\": \"#C74375\",\n            \"pantone_value\": \"17-2031\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"true red\",\n            \"year\": 2002,\n            \"color\": \"#BF1932\",\n            \"pantone_value\": \"19-1664\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"aqua sky\",\n            \"year\": 2003,\n            \"color\": \"#7BC4C4\",\n            \"pantone_value\": \"14-4811\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"tigerlily\",\n            \"year\": 2004,\n            \"color\": \"#E2583E\",\n            \"pantone_value\": \"17-1456\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"blue turquoise\",\n            \"year\": 2005,\n            \"color\": \"#53B0AE\",\n            \"pantone_value\": \"15-5217\"\n        }\n    ],\n    \"support\": {\n        \"url\": \"https://reqres.in/#support-heading\",\n        \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\n    }\n}"
				}
			]
		},
		{
			"name": "get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// validate the year is >then 1000\r",
							"\r",
							"const jsondata = pm.response.json();\r",
							"\r",
							"pm.test(\"Validate the year is > then 2000\", function(){\r",
							"    console.log(jsondata.data[0].year);\r",
							"\r",
							"    pm.expect(jsondata.data[0].year>1000).to.be.true;\r",
							"\r",
							"    pm.expect(jsondata.data[0].id).to.equal(1);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/unknown?name={{name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"unknown"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "getId",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/unknown?name=cerulean",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"unknown"
							],
							"query": [
								{
									"key": "name",
									"value": "cerulean"
								}
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"per_page\": 6,\n    \"total\": 12,\n    \"total_pages\": 2,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"cerulean\",\n            \"year\": 2000\n            \n        }\n       \n    ]\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}