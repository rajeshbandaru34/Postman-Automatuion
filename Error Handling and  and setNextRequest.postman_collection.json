{
	"info": {
		"_postman_id": "e8095edd-68dc-487f-b162-03105f73ab4c",
		"name": "Error Handling and  and setNextRequest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28909121",
		"_collection_link": "https://puls77.postman.co/workspace/Postman_Automation~afa490e0-15ec-43d3-bb40-b5cd6799cd1d/collection/28909121-e8095edd-68dc-487f-b162-03105f73ab4c?action=share&source=collection_link&creator=28909121"
	},
	"item": [
		{
			"name": "AddBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Error Handling\r",
							"var req = JSON.parse(pm.request.body.raw);\r",
							"const JasonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"flag\", false);\r",
							"\r",
							"function generateBookId() {\r",
							"    const bookId = req.isbn + req.aisle;\r",
							"    return bookId;\r",
							"}\r",
							"\r",
							"function cleanupScript() {\r",
							"    const Book_id = generateBookId();\r",
							"    console.log(Book_id);\r",
							"    pm.environment.set(\"Book_num\", Book_id);\r",
							"    console.log(pm.environment.get(\"Book_num\"));\r",
							"    pm.collectionVariables.set(\"flag\", true);\r",
							"    pm.execution.setNextRequest(\"DeleteBook\"); // Ensure \"DeleteBook\" matches the request name exactly\r",
							"}\r",
							"\r",
							"pm.test(\"Validation status Code is 200\", function() {\r",
							"    try {\r",
							"        pm.response.to.have.status(200);\r",
							"        pm.expect(JasonData).to.have.property(\"Msg\");\r",
							"        pm.expect(JasonData.Msg).to.eql(\"successfully added\"); \r",
							"        pm.expect(JasonData).to.have.property(\"ID\");\r",
							"        pm.expect(JasonData.ID).to.eql(generateBookId()); // Call the function to get the generated ID\r",
							"    } catch (error) {\r",
							"        if (JasonData.Msg && JasonData.Msg.includes(\"Exists\")) {\r",
							"            cleanupScript();\r",
							"        } else {\r",
							"            console.error(\"An unexpected error occurred:\", error); // Log unexpected errors\r",
							"        }\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"authorName\",\"Rajesh\")\r",
							"pm.collectionVariables.set(\"Name\", \"Learn Appium Automation with Javas\", \"Learn Appium Automation with Javas\");\r",
							"pm.collectionVariables.set(\"isbn\", pm.iterationData.get(\"isbn\"));\r",
							"pm.collectionVariables.set(\"aisle\", pm.iterationData.set(\"aisle\"));\r",
							"console.log(pm.collectionVariables.get(\"isbn\"));\r",
							"console.log(pm.collectionVariables.get(\"aisle\"));\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n\"name\":\"{{Name}}\",\r\n\"isbn\":\"{{isbn}}\",\r\n\"aisle\":\"{{aisle}}\",\r\n\"author\":\"{{authorName}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_Url}}/Library/Addbook.php?ContentTypeOne=application/json;charset=UTF-8",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"Library",
						"Addbook.php"
					],
					"query": [
						{
							"key": "ContentTypeOne",
							"value": "application/json;charset=UTF-8"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// validate the Status code\r",
							"\r",
							"pm.test(\"Valiodate the ststus code\", function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"    \r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_Url}}/Library/GetBook.php?ID={{bookiD}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"Library",
						"GetBook.php"
					],
					"query": [
						{
							"key": "ID",
							"value": "{{bookiD}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the the response \r",
							"const jsonbody = pm.response.json();\r",
							"\r",
							"pm.test(\"Validate the jason body response\", function()\r",
							"{\r",
							"pm.expect(jsonbody.msg).to.eql(\"book is successfully deleted\");\r",
							"if(pm.collectionVariables.get(\"flag\"))\r",
							"{\r",
							"pm.execution.setNextRequest(\"AddBook\");\r",
							"}\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"ID\":\"{{Book_num}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_Url}}/Library/DeleteBook.php/ID=fgutfgvi0",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"Library",
						"DeleteBook.php",
						"ID=fgutfgvi0"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authorName",
			"value": "",
			"type": "string"
		},
		{
			"key": "Name",
			"value": "",
			"type": "string"
		},
		{
			"key": "flag",
			"value": "false",
			"type": "string"
		},
		{
			"key": "isbn",
			"value": "",
			"type": "string"
		},
		{
			"key": "aisle",
			"value": "",
			"type": "string"
		}
	]
}